// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZonaRival.Data;

#nullable disable

namespace ZonaRival.Migrations
{
    [DbContext(typeof(ZonaRivalContext))]
    [Migration("20250905153015_UpdateEquipoEdad")]
    partial class UpdateEquipoEdad
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ZonaRival.Models.Cancha", b =>
                {
                    b.Property<int>("CanchaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CanchaId"));

                    b.Property<string>("NombreCancha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CanchaId");

                    b.ToTable("Canchas");
                });

            modelBuilder.Entity("ZonaRival.Models.Equipo", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EquipoId"));

                    b.Property<int>("CantidadJugadores")
                        .HasColumnType("int");

                    b.Property<string>("ColorUniforme")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEquipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RangoEdad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EquipoId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("ZonaRival.Models.EquipoCancha", b =>
                {
                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("CanchaId")
                        .HasColumnType("int");

                    b.HasKey("EquipoId", "CanchaId");

                    b.HasIndex("CanchaId");

                    b.ToTable("EquiposCanchas");
                });

            modelBuilder.Entity("ZonaRival.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UsuarioId");

                    b.HasIndex("IdEquipo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ZonaRival.Models.EquipoCancha", b =>
                {
                    b.HasOne("ZonaRival.Models.Cancha", "Cancha")
                        .WithMany("EquiposCanchas")
                        .HasForeignKey("CanchaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZonaRival.Models.Equipo", "Equipo")
                        .WithMany("EquiposCanchas")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancha");

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("ZonaRival.Models.Usuario", b =>
                {
                    b.HasOne("ZonaRival.Models.Equipo", "Equipo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("ZonaRival.Models.Cancha", b =>
                {
                    b.Navigation("EquiposCanchas");
                });

            modelBuilder.Entity("ZonaRival.Models.Equipo", b =>
                {
                    b.Navigation("EquiposCanchas");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
